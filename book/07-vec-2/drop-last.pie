#lang pie

;; drop-last
(claim base-drop-last
  (Pi ((E U))
    (-> (Vec E (add1 zero)) (Vec E zero))))
(define base-drop-last
  (lambda (E)
    (lambda (es)
      vecnil)))

(claim mot-drop-last
  (-> U Nat
      U))
(define mot-drop-last
  (lambda (E k)
    (-> (Vec E (add1 k)) (Vec E k))))

(claim step-drop-last
  (Pi ((E U)
       (l-1 Nat))
    (-> (mot-drop-last E l-1)
        (mot-drop-last E (add1 l-1)))))
(define step-drop-last
  (lambda (E l-1)
    (lambda (drop-last_l-1)
      (lambda (es)
        (vec:: (head es) (drop-last_l-1 (tail es)))))))

(claim drop-last
  (Pi ((E U)
       (l Nat))
    (-> (Vec E (add1 l))
        (Vec E l))))
(define drop-last
  (lambda (E l)
    (ind-Nat l
      (mot-drop-last E)
      (base-drop-last E)
      (step-drop-last E))))
