#lang pie

;; last
(claim base-last
  (Pi ((E U))
    (-> (Vec E (add1 zero)) E)))
(define base-last
  (lambda (E)
    (lambda (es)
      (head es))))

(claim mot-last
  (-> U Nat
      U))
(define mot-last
  (lambda (E k)
    (-> (Vec E (add1 k)) E)))

(claim step-last
  (Pi ((E U)
       (l-1 Nat))
    (-> (mot-last E l-1)
        (mot-last E (add1 l-1)))))
(define step-last
  (lambda (E l-1)
    (lambda (last_l-1)
      (lambda (es)
        (last_l-1 (tail es))))))

(claim last
  (Pi ((E U)
       (l Nat))
    (-> (Vec E (add1 l)) E)))
(define last
  (lambda (E l)
    (ind-Nat l
      (mot-last E)
      (base-last E)
      (step-last E))))
