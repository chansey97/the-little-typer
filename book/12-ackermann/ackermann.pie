#lang pie

;; +
(claim step-+
  (-> Nat Nat))
(define step-+
  (lambda (+_n-1)
    (add1 +_n-1)))

(claim +
  (-> Nat Nat Nat))
(define +
  (lambda (n j)
    (iter-Nat n
      j
      step-+)))

;; ackermann
(claim repeat
  (-> (-> Nat Nat)
      Nat
      Nat))
(define repeat
  (lambda (f n)
    (iter-Nat n
      (f 1)
      (lambda (iter_f_n-1)
        (f iter_f_n-1)))))

(claim ackermann
  (-> Nat Nat
      Nat))
(define ackermann
  (lambda (n)
    (iter-Nat n
      (+ 1)
      (lambda (ackermann_n-1)
        (repeat ackermann_n-1)))))

