;; Prove that “consing 'plattar onto two equal lists of treats produces equal lists of treats.”
#lang pie

(claim Treat-Statement
  U)
(define Treat-Statement
  (Pi ((some-treats (List Atom))
       (more-treats (List Atom)))
    (-> (= (List Atom)
          some-treats
          more-treats)
      (= (List Atom)
        (:: 'plattar some-treats)
        (:: 'plattar more-treats)))))

(claim ::-plattar
  (-> (List Atom)
      (List Atom)))
(define ::-plattar
  (lambda (tasty-treats)
    (:: 'plattar tasty-treats)))

(claim treat-proof
  Treat-Statement)
(define treat-proof
  (lambda (some-treats more-treats)
    (lambda (treats=)
      (cong treats= ::-plattar))))

;; (claim treats1
;;   (List Atom))
;; (define treats1
;;   (:: 'kanelbullar
;;     (:: 'plattar
;;       (:: 'prinsesstarta nil))))

;; (claim treats2
;;   (List Atom))
;; (define treats2
;;   (:: 'kanelbullar
;;     (:: 'plattar
;;       (:: 'prinsesstarta nil))))

;; (treat-proof treats1 treats2)
