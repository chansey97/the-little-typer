#lang pie

;; +
(claim step-+
  (-> Nat Nat))
(define step-+
  (lambda (+_n-1)
    (add1 +_n-1)))

(claim +
  (-> Nat Nat Nat))
(define +
  (lambda (n j)
    (iter-Nat n
      j
      step-+)))

;; +1=add1
(claim +1=add1
  (Pi ((n Nat))
    (= Nat (+ 1 n) (add1 n))))
(define +1=add1
  (lambda (n) (same (add1 n))))

;; 注：如果 +1=add1定义为如下形式：，
;; (claim +1=add1
;;   (Pi ((n Nat))
;;     (= Nat (+ n 1) (add1 n))))
;; (+ n 1)是neutral expr，无法进一步规约，此时需要使用ind-Nat来一般化
;; see: incr=addl
